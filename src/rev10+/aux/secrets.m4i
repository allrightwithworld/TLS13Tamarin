define(<!lemma_es_basic!>,<!
lemma es_basic [use_induction, reuse]:
  "All actor peer es #i #j.
  CommitES(actor, peer, 'client', es)@i
   & KU(es)@j ==>
    (Ex #r. RevLtk(peer)@r & #r < #i)"
!>)dnl
dnl
define(<!lemma_ss_basic!>, <!
lemma ss_basic [use_induction, reuse]:
  "All actor peer ss #i #j.
  CommitSS(actor, peer, 'client', ss)@i & KU(ss)@j ==>
    (Ex #r. RevLtk(peer)@r)"
!>)dnl
dnl
define(<!lemma_es_weak!>, <!
lemma es_weak [use_induction, reuse]:
  "All actor peer actor2 peer2 es #i #j #k.  
    CommitES(actor, peer, 'server', es)@i & 
    CommitES(actor2, peer2, 'client', es)@j &
    KU(es)@k ==> F"
!>)dnl
dnl
define(<!lemma_ss_weak!>, <!
lemma ss_weak [use_induction, reuse]:
  "All actor peer actor2 peer2 ss #i #j #k.  
    CommitSS(actor, peer, 'server', ss)@i & 
    CommitSS(peer2, actor2, 'client', ss)@j &
    KU(ss)@k ==>  
      ((Ex x #s. RevDHExp(actor, x)@s) | (Ex x #s. RevDHExp(peer2, x)@s))"
!>)dnl
define(<!lemma_es_mutual!>, <!
lemma es_mutual [use_induction, reuse]:
  "All actor peer es #i #k.
  CommitES(actor, peer, 'server', es)@i &  KU(es)@k ==>
    (Ex #r. RevLtk(peer)@r & #r < #i) | 
    (Ex #r. RevLtk(actor)@r & #r < #i)"
!>)dnl
dnl
define(<!lemma_ss_mutual!>, <!
lemma ss_mutual [use_induction, reuse]:
  "All actor peer ss #i #k.
  CommitSS(actor, peer, 'server', ss)@i &  KU(ss)@k ==>
    (Ex #r. RevLtk(peer)@r) | 
    (Ex #r. RevLtk(actor)@r)"
!>)dnl
dnl
